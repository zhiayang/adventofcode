// prog.cpp
// Copyright (c) 2014 - 2017, zhiayang@gmail.com
// Licensed under the Apache License Version 2.0.


#include "assert.h"

#include <map>
#include <set>
#include <list>
#include <stack>
#include <array>
#include <deque>
#include <string>
#include <vector>
#include <fstream>
#include <functional>
#include <unordered_set>

#include "aoc.h"
#include "tinyformat.h"

struct point_t
{
	point_t(int x, int y, int vx, int vy) : x(x), y(y), vx(vx), vy(vy) { }

	int x;
	int y;

	int vx;
	int vy;
};

int main()
{
	std::vector<point_t> input = {
		point_t(-41150,  41504,  4, -4),
		point_t( 31211, -10213, -3,  1),
		point_t(-51522, -41248,  5,  4),
		point_t( 31227, -51593, -3,  5),
		point_t( 31257, -20560, -3,  2),
		point_t( 41558,  10468, -4, -1),
		point_t( 10539, -30904, -1,  3),
		point_t( 51919, -41253, -5,  4),
		point_t( 31246,  10473, -3, -1),
		point_t(-20471,  20813,  2, -2),
		point_t( 51910, -10222, -5,  1),
		point_t(-20503,  20816,  2, -2),
		point_t( 20901, -41255, -2,  4),
		point_t( 31249, -41249, -3,  4),
		point_t(-10139,  10477,  1, -1),
		point_t( 20888, -30903, -2,  3),
		point_t( 31218,  31158, -3, -3),
		point_t(-30802,  51848,  3, -5),
		point_t( 51923,  51854, -5, -5),
		point_t(-51503,  41504,  5, -4),
		point_t(-10131,  31165,  1, -3),
		point_t(-30809, -10222,  3,  1),
		point_t( 10551,  20818, -1, -2),
		point_t( 31236,  31158, -3, -3),
		point_t(-51534,  20822,  5, -2),
		point_t( 20920, -41250, -2,  4),
		point_t(-30841,  41504,  3, -4),
		point_t( 51932, -41256, -5,  4),
		point_t( 31249,  10469, -3, -1),
		point_t(-41198,  41505,  4, -4),
		point_t(-30833,  41510,  3, -4),
		point_t(-51494,  41507,  5, -4),
		point_t( 10553,  10472, -1, -1),
		point_t(-41174, -20564,  4,  2),
		point_t( 41578,  20816, -4, -2),
		point_t(-51503, -10214,  5,  1),
		point_t(-30824, -30906,  3,  3),
		point_t(-41172,  20816,  4, -2),
		point_t(-41198,  41507,  4, -4),
		point_t( 41578, -30911, -4,  3),
		point_t( 20904,  20817, -2, -2),
		point_t( 51901,  41503, -5, -4),
		point_t( 20872, -30906, -2,  3),
		point_t( 31265, -20560, -3,  2),
		point_t(-10136, -10217,  1,  1),
		point_t( 31246,  20817, -3, -2),
		point_t( 51927,  20820, -5, -2),
		point_t(-30821, -10222,  3,  1),
		point_t(-20492, -10221,  2,  1),
		point_t(-20488, -51596,  2,  5),
		point_t( 41610, -41249, -4,  4),
		point_t( 31257, -30908, -3,  3),
		point_t( 41610,  31160, -4, -3),
		point_t(-10151,  41503,  1, -4),
		point_t(-51527, -10216,  5,  1),
		point_t( 20867, -30903, -2,  3),
		point_t( 31228,  41503, -3, -4),
		point_t(-10160, -41253,  1,  4),
		point_t( 41595, -30907, -4,  3),
		point_t(-51506,  31158,  5, -3),
		point_t(-10142, -10219,  1,  1),
		point_t(-10115, -10222,  1,  1),
		point_t( 10572, -51601, -1,  5),
		point_t( 51899,  20818, -5, -2),
		point_t(-20476, -30910,  2,  3),
		point_t(-41174,  31162,  4, -3),
		point_t( 31246,  41509, -3, -4),
		point_t(-30801, -41253,  3,  4),
		point_t(-10130,  41508,  1, -4),
		point_t(-20473,  10470,  2, -1),
		point_t(-41150, -20565,  4,  2),
		point_t( 31246,  31165, -3, -3),
		point_t( 41610, -41256, -4,  4),
		point_t( 41574,  31164, -4, -3),
		point_t(-41157, -30903,  4,  3),
		point_t( 31241,  10469, -3, -1),
		point_t( 31217, -30912, -3,  3),
		point_t( 10529,  41503, -1, -4),
		point_t( 20901,  51853, -2, -5),
		point_t(-51551,  10472,  5, -1),
		point_t( 41613,  41503, -4, -4),
		point_t(-10134, -41251,  1,  4),
		point_t( 41595, -41253, -4,  4),
		point_t(-51511,  10477,  5, -1),
		point_t(-30837, -10217,  3,  1),
		point_t( 51950, -51602, -5,  5),
		point_t(-51541,  41503,  5, -4),
		point_t( 51907,  51857, -5, -5),
		point_t(-41198,  10469,  4, -1),
		point_t(-30834,  20817,  3, -2),
		point_t( 51947,  31163, -5, -3),
		point_t(-30804, -30912,  3,  3),
		point_t(-30829, -20560,  3,  2),
		point_t( 10547, -30908, -1,  3),
		point_t(-51531,  31166,  5, -3),
		point_t( 51955,  41510, -5, -4),
		point_t(-30861, -30911,  3,  3),
		point_t( 20872, -51596, -2,  5),
		point_t(-30829,  51854,  3, -5),
		point_t(-41150, -10218,  4,  1),
		point_t( 31257, -20560, -3,  2),
		point_t(-20476,  20816,  2, -2),
		point_t(-20468,  10470,  2, -1),
		point_t(-51519, -30911,  5,  3),
		point_t( 51959,  10468, -5, -1),
		point_t( 20888, -51593, -2,  5),
		point_t( 51947,  10475, -5, -1),
		point_t( 31246,  10468, -3, -1),
		point_t(-20516, -41249,  2,  4),
		point_t(-51511, -41248,  5,  4),
		point_t(-41147,  20817,  4, -2),
		point_t(-41150, -51594,  4,  5),
		point_t(-10163, -30908,  1,  3),
		point_t(-10152, -10213,  1,  1),
		point_t(-20460, -30903,  2,  3),
		point_t(-41169, -10219,  4,  1),
		point_t(-51531, -30907,  5,  3),
		point_t(-30812,  41503,  3, -4),
		point_t(-41169,  10477,  4, -1),
		point_t( 10546,  51848, -1, -5),
		point_t(-10139,  20813,  1, -2),
		point_t(-30861,  51851,  3, -5),
		point_t(-20497, -51593,  2,  5),
		point_t( 51949, -20558, -5,  2),
		point_t( 41597, -51595, -4,  5),
		point_t( 51940,  31163, -5, -3),
		point_t( 41589,  10473, -4, -1),
		point_t(-51495, -41257,  5,  4),
		point_t( 31265, -41254, -3,  4),
		point_t( 10527,  10473, -1, -1),
		point_t( 51927,  41509, -5, -4),
		point_t( 20884,  10471, -2, -1),
		point_t(-51493,  41507,  5, -4),
		point_t(-41182, -30912,  4,  3),
		point_t( 10575,  41509, -1, -4),
		point_t( 20884, -20567, -2,  2),
		point_t( 10535, -20560, -1,  2),
		point_t(-51543,  41512,  5, -4),
		point_t(-30825, -10214,  3,  1),
		point_t(-51535, -20559,  5,  2),
		point_t( 10528, -10218, -1,  1),
		point_t(-51538,  41506,  5, -4),
		point_t( 20892, -30905, -2,  3),
		point_t( 31249, -51596, -3,  5),
		point_t( 10539,  20815, -1, -2),
		point_t(-20464, -41248,  2,  4),
		point_t(-41186, -20567,  4,  2),
		point_t(-20492,  20820,  2, -2),
		point_t(-30818,  31165,  3, -3),
		point_t(-10131, -51596,  1,  5),
		point_t( 51919,  20814, -5, -2),
		point_t(-41166, -30905,  4,  3),
		point_t(-10151,  31163,  1, -3),
		point_t( 10522,  10468, -1, -1),
		point_t( 51911, -30912, -5,  3),
		point_t(-41173,  31160,  4, -3),
		point_t( 31260, -41248, -3,  4),
		point_t(-10139, -10220,  1,  1),
		point_t(-30857, -20558,  3,  2),
		point_t( 10531, -10222, -1,  1),
		point_t(-30813, -20566,  3,  2),
		point_t( 51944, -30903, -5,  3),
		point_t(-41198,  20820,  4, -2),
		point_t(-41150, -41252,  4,  4),
		point_t(-20508,  20814,  2, -2),
		point_t( 41554, -41256, -4,  4),
		point_t( 31238, -41248, -3,  4),
		point_t( 20906, -10219, -2,  1),
		point_t( 51912,  41505, -5, -4),
		point_t( 20866, -51602, -2,  5),
		point_t( 10519,  31164, -1, -3),
		point_t(-20479,  51856,  2, -5),
		point_t(-30829, -51596,  3,  5),
		point_t( 51943, -10221, -5,  1),
		point_t( 20917, -41249, -2,  4),
		point_t( 20888,  41507, -2, -4),
		point_t( 51957,  41507, -5, -4),
		point_t(-20499, -10213,  2,  1),
		point_t( 51911,  41503, -5, -4),
		point_t(-51551, -51595,  5,  5),
		point_t(-10139,  51849,  1, -5),
		point_t( 41582, -10222, -4,  1),
		point_t(-41150,  31159,  4, -3),
		point_t( 20888,  41504, -2, -4),
		point_t( 10567,  20821, -1, -2),
		point_t( 51900, -10222, -5,  1),
		point_t(-51503,  20815,  5, -2),
		point_t(-20488, -51596,  2,  5),
		point_t( 51939, -10221, -5,  1),
		point_t( 31270,  10468, -3, -1),
		point_t(-51527,  20816,  5, -2),
		point_t( 51926,  51853, -5, -5),
		point_t(-51543, -20564,  5,  2),
		point_t( 20883, -20558, -2,  2),
		point_t(-41166,  20816,  4, -2),
		point_t( 51936,  41511, -5, -4),
		point_t(-10115, -10220,  1,  1),
		point_t( 31210, -51593, -3,  5),
		point_t(-10115, -41248,  1,  4),
		point_t( 31233, -20559, -3,  2),
		point_t( 20921, -51598, -2,  5),
		point_t(-41185, -30912,  4,  3),
		point_t(-51531, -51600,  5,  5),
		point_t( 10543, -10220, -1,  1),
		point_t( 51924, -30912, -5,  3),
		point_t(-30821,  20813,  3, -2),
		point_t( 10545, -51602, -1,  5),
		point_t(-10126, -41248,  1,  4),
		point_t(-30829, -30907,  3,  3),
		point_t(-51495,  20817,  5, -2),
		point_t( 10548, -41256, -1,  4),
		point_t( 41578, -51599, -4,  5),
		point_t(-41203, -51602,  4,  5),
		point_t( 31253, -10214, -3,  1),
		point_t(-20457, -30908,  2,  3),
		point_t(-10147,  51848,  1, -5),
		point_t(-51502, -20558,  5,  2),
		point_t( 41615, -10222, -4,  1),
		point_t(-41182, -30906,  4,  3),
		point_t( 20912, -10216, -2,  1),
		point_t( 20869, -20566, -2,  2),
		point_t( 10555,  41510, -1, -4),
		point_t(-30835,  10472,  3, -1),
		point_t(-20487,  41505,  2, -4),
		point_t(-20511, -41249,  2,  4),
		point_t( 20913,  20822, -2, -2),
		point_t(-30824,  10469,  3, -1),
		point_t( 10567,  10472, -1, -1),
		point_t( 31238,  31166, -3, -3),
		point_t(-41186, -10219,  4,  1),
		point_t(-41169, -51602,  4,  5),
		point_t( 51947, -20564, -5,  2),
		point_t( 41562, -10219, -4,  1),
		point_t(-10155,  20821,  1, -2),
		point_t( 20884, -51598, -2,  5),
		point_t( 20907,  41505, -2, -4),
		point_t( 10579,  51848, -1, -5),
		point_t( 41586, -30905, -4,  3),
		point_t(-30859, -41248,  3,  4),
		point_t( 20864,  10475, -2, -1),
		point_t( 20876, -30908, -2,  3),
		point_t( 10543, -41248, -1,  4),
		point_t( 31246, -51598, -3,  5),
		point_t(-30833,  41503,  3, -4),
		point_t(-20473, -51595,  2,  5),
		point_t( 31265, -30904, -3,  3),
		point_t(-51493,  31158,  5, -3),
		point_t( 51947,  20821, -5, -2),
		point_t(-41166, -30912,  4,  3),
		point_t(-30813,  41508,  3, -4),
		point_t(-41198, -51601,  4,  5),
		point_t(-10151,  20819,  1, -2),
		point_t( 51907,  51854, -5, -5),
		point_t(-10158, -41254,  1,  4),
		point_t(-41170, -41249,  4,  4),
		point_t( 51907,  51856, -5, -5),
		point_t( 41586, -10216, -4,  1),
		point_t( 31246, -20560, -3,  2),
		point_t(-30826, -10217,  3,  1),
		point_t( 10569,  51848, -1, -5),
		point_t(-20484, -30912,  2,  3),
		point_t( 10559,  41510, -1, -4),
		point_t( 41555,  31167, -4, -3),
		point_t( 20877, -30911, -2,  3),
		point_t(-51549,  20822,  5, -2),
		point_t(-51551,  51856,  5, -5),
		point_t(-10163,  10476,  1, -1),
		point_t(-51530, -10222,  5,  1),
		point_t( 31241,  20817, -3, -2),
		point_t(-51514,  20822,  5, -2),
		point_t(-41155,  31158,  4, -3),
		point_t( 41565,  10468, -4, -1),
		point_t( 51949,  41503, -5, -4),
		point_t( 20874,  10468, -2, -1),
		point_t( 41611, -41253, -4,  4),
		point_t(-30813, -30906,  3,  3),
		point_t( 41574,  41511, -4, -4),
		point_t( 51931,  51856, -5, -5),
		point_t(-20508, -10220,  2,  1),
		point_t( 20891, -41253, -2,  4),
		point_t( 31249,  31159, -3, -3),
		point_t( 41579,  31162, -4, -3),
		point_t(-51527,  51853,  5, -5),
		point_t(-30826,  20819,  3, -2),
		point_t(-20508,  10471,  2, -1),
		point_t(-20472,  10476,  2, -1),
		point_t( 51924,  41507, -5, -4),
		point_t(-30837, -51600,  3,  5),
		point_t(-20487,  41512,  2, -4),
		point_t(-51499,  41512,  5, -4),
		point_t(-51508, -30910,  5,  3),
		point_t(-20483, -20566,  2,  2),
		point_t(-20516, -51596,  2,  5),
		point_t( 20924, -30908, -2,  3),
		point_t(-10144, -41257,  1,  4),
		point_t(-41154, -41257,  4,  4),
		point_t( 51902, -20558, -5,  2),
		point_t( 41610, -10216, -4,  1),
		point_t( 51917, -41248, -5,  4),
		point_t(-20459,  31158,  2, -3),
		point_t( 20884,  31162, -2, -3),
		point_t(-20506, -30908,  2,  3),
		point_t(-51533, -30903,  5,  3),
		point_t(-10168, -30912,  1,  3),
		point_t( 20904,  41506, -2, -4),
		point_t(-51551,  31163,  5, -3),
		point_t(-20500, -51595,  2,  5),
		point_t( 31251, -20561, -3,  2),
		point_t(-41186, -51595,  4,  5),
		point_t(-20496,  31163,  2, -3),
		point_t(-20458, -41257,  2,  4),
		point_t( 41554, -41255, -4,  4),
		point_t(-51511,  31163,  5, -3),
		point_t(-51535,  20821,  5, -2),
		point_t(-30853, -41249,  3,  4),
		point_t( 20912, -51597, -2,  5),
		point_t( 10527, -30903, -1,  3),
		point_t( 41587,  41505, -4, -4),
	};

	std::vector<point_t> points = input;

	int best_t = 0;
	int _minx = 0; int _miny = 0;
	int _maxx = 0; int _maxy = 0;
	int n_rows = 0;
	int n_cols = 0;

	int smallest_bb = INT_MAX;
	for(int t = 0; t <= 10344 + 10; t++)
	{
		for(auto& pt : points)
		{
			pt.x += pt.vx;
			pt.y += pt.vy;
		}

		// print out all the points.
		// printf("frame %d\n", t);
		// std::ofstream frame("frames/frame" + std::to_string(t) + ".txt", std::ios::out);

		// get the mins and maxes
		int minx = INT_MAX; int miny = INT_MAX;
		int maxx = INT_MIN; int maxy = INT_MIN;
		for(const auto& pt : points)
		{
			if(pt.x < minx) minx = pt.x;
			if(pt.x > maxx) maxx = pt.x;
			if(pt.y < miny) miny = pt.y;
			if(pt.y > maxy) maxy = pt.y;
		}

		int rows = (maxy - miny + 1);
		int cols = (maxx - minx + 1);

		n_rows = rows;
		n_cols = cols;

		_minx = minx;
		_maxx = maxx;

		_miny = miny;
		_maxy = maxy;

		tfm::printfln("t = %d: (%zu) (%d x %d) (%d, %d, %d, %d)", t, (size_t) rows * (size_t) cols, rows, cols,
			minx, miny, maxx, maxy);

		if(rows * cols < smallest_bb)
			best_t = t;

		if(t >= 10340)
		{
			// plot the points!
			char* grid = new char[n_rows * n_cols];
			for(const auto& pt : points)
			{
				grid[(pt.x - _minx) + n_cols*(pt.y - _miny)] = '#';
			}

			for(int i = 0; i < n_rows; i++)
			{
				for(int j = 0; j < n_cols; j++)
				{
					if(grid[j + n_cols*i]) printf("#");
					else printf(" ");
				}

				printf("\n");
			}

			printf("\n\n\n");

			delete[] grid;
		}
	}

}





